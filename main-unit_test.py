# Generated by Qodo Gen
from func import _write
import unittest

class Test_Write(unittest.TestCase):

    # Successfully reads from 'assets/original_file.txt' and writes to 'assets/processed_file.txt'
    def test_successful_read_and_write(self):
        with open('assets/original_file.txt', 'w') as f:
            f.write("Hello World\n")
        _write()
        with open('assets/processed_file.txt', 'r') as f:
            content = f.read()
        self.assertEqual(content, "Hello World\n")

    # Handles empty 'assets/original_file.txt' without errors
    def test_empty_file_handling(self):
        with open('assets/original_file.txt', 'w') as f:
            pass
        _write()
        with open('assets/processed_file.txt', 'r') as f:
            content = f.read()
        self.assertEqual(content, "")

    # Processes lines with only special characters correctly
    def test_special_characters_processing(self):
        with open('assets/original_file.txt', 'w') as f:
            f.write("*&\n")
        _write()
        with open('assets/processed_file.txt', 'r') as f:
            content = f.read()
        self.assertEqual(content, "&*\n")